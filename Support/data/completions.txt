AccelerometerEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, timestamp:Number = 0, accelerationX:Number = 0, accelerationY:Number = 0, accelerationZ:Number = 0)
ActivityEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, activating:Boolean = false)
ApplicationDomain(parentDomain:ApplicationDomain = null)
ApplyElementIDOperation(operationState:SelectionState, targetElement:FlowElement, newID:String, relativeStart:int = 0, relativeEnd:int = -1)
ApplyElementStyleNameOperation(operationState:SelectionState, targetElement:FlowElement, newStyleName:String, relativeStart:int = 0, relativeEnd:int = -1)
ApplyElementTypeNameOperation(operationState:SelectionState, targetElement:FlowElement, typeName:String, relativeStart:int = 0, relativeEnd:int = -1)
ApplyElementUserStyleOperation(operationState:SelectionState, targetElement:FlowElement, styleName:String, value:*, relativeStart:int = 0, relativeEnd:int = -1)
ApplyFormatOperation(operationState:SelectionState, leafFormat:flashx.textLayout.formats:ITextLayoutFormat, paragraphFormat:flashx.textLayout.formats:ITextLayoutFormat, containerFormat:flashx.textLayout.formats:ITextLayoutFormat = null)
ApplyFormatToElementOperation(operationState:SelectionState, targetElement:FlowElement, format:flashx.textLayout.formats:ITextLayoutFormat, relativeStart:int = 0, relativeEnd:int = -1)
ApplyLinkOperation(operationState:SelectionState, href:String, target:String, extendToLinkBoundary:Boolean)
ApplyTCYOperation(operationState:SelectionState, tcyOn:Boolean)
ArgumentError(message:String = "")
Array(... values)
Array(numElements:int = 0)
AsyncErrorEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, text:String = "", error:Error = null)
BevelFilter(distance:Number = 4.0, angle:Number = 45, highlightColor:uint = 0xFFFFFF, highlightAlpha:Number = 1.0, shadowColor:uint = 0x000000, shadowAlpha:Number = 1.0, blurX:Number = 4.0, blurY:Number = 4.0, strength:Number = 1, quality:int = 1, type:String = "inner", knockout:Boolean = false)
Bitmap(bitmapData:BitmapData = null, pixelSnapping:String = "auto", smoothing:Boolean = false)
BitmapData(width:int, height:int, transparent:Boolean = true, fillColor:uint = 0xFFFFFFFF)
BlurFilter(blurX:Number = 4.0, blurY:Number = 4.0, quality:int = 1)
Boolean(expression:Object = false)
BrowserInvokeEvent(type:String, bubbles:Boolean, cancelable:Boolean, arguments:Array, sandboxType:String, securityDomain:String, isHTTPS:Boolean, isUserEvent:Boolean)
CSMSettings(fontSize:Number, insideCutoff:Number, outsideCutoff:Number)
ClearFormatOnElementOperation(operationState:SelectionState, targetElement:FlowElement, format:flashx.textLayout.formats:ITextLayoutFormat, relativeStart:int = 0, relativeEnd:int = -1)
ClearFormatOperation(operationState:SelectionState, leafFormat:flashx.textLayout.formats:ITextLayoutFormat, paragraphFormat:flashx.textLayout.formats:ITextLayoutFormat, containerFormat:flashx.textLayout.formats:ITextLayoutFormat = null)
Collator(requestedLocaleIDName:String, initialMode:String = "sorting")
ColorMatrixFilter(matrix:Array = null)
ColorTransform(redMultiplier:Number = 1.0, greenMultiplier:Number = 1.0, blueMultiplier:Number = 1.0, alphaMultiplier:Number = 1.0, redOffset:Number = 0, greenOffset:Number = 0, blueOffset:Number = 0, alphaOffset:Number = 0)
ColumnState(blockProgression:String, columnDirection:String, controller:ContainerController, compositionWidth:Number, compositionHeight:Number)
CompositeOperation(operations:Array = null)
CompositionAttributeRange(relativeStart:int, relativeEnd:int, selected:Boolean, converted:Boolean)
CompositionCompleteEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, textFlow:flashx.textLayout.elements:TextFlow = null, compositionStart:int = 0, compositionLength:int = 0)
Configuration(initializeWithDefaults:Boolean = true)
ContainerController(container:Sprite, compositionWidth:Number = 100, compositionHeight:Number = 100)
ContentElement(elementFormat:ElementFormat = null, eventMirror:EventDispatcher = null, textRotation:String = "rotate0")
ContextMenuEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, mouseTarget:InteractiveObject = null, contextMenuOwner:InteractiveObject = null)
ContextMenuItem(caption:String, separatorBefore:Boolean = false, enabled:Boolean = true, visible:Boolean = true)
ConvolutionFilter(matrixX:Number = 0, matrixY:Number = 0, matrix:Array = null, divisor:Number = 1.0, bias:Number = 0.0, preserveAlpha:Boolean = true, clamp:Boolean = true, color:uint = 0, alpha:Number = 0.0)
CopyOperation(operationState:SelectionState)
CreateDivOperation(operationState:SelectionState, parent:FlowGroupElement = null, format:flashx.textLayout.formats:ITextLayoutFormat = null)
CreateListOperation(operationState:SelectionState, parent:FlowGroupElement = null, listFormat:flashx.textLayout.formats:ITextLayoutFormat = null)
CreateSubParagraphGroupOperation(operationState:SelectionState, parent:FlowGroupElement = null, format:flashx.textLayout.formats:ITextLayoutFormat = null)
CurrencyFormatter(requestedLocaleIDName:String)
CurrencyParseResult(value:Number = NaN, symbol:String = "")
CutOperation(operationState:SelectionState, scrapToCut:flashx.textLayout.edit:TextScrap)
DNSResolverEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, host:String = "", resourceRecords:Array = null)
DRMAuthenticateEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, header:String = "", userPrompt:String = "", passPrompt:String = "", urlPrompt:String = "", authenticationType:String = "", netstream:NetStream = null)
DRMAuthenticationCompleteEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, inServerURL:String = null, inDomain:String = null, inToken:ByteArray = null)
DRMAuthenticationErrorEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, inDetail:String = "", inErrorID:int = 0, inSubErrorID:int = 0, inServerURL:String = null, inDomain:String = null)
DRMContentData(rawData:ByteArray = null)
DRMDeviceGroupErrorEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, errorDetail:String = "", errorCode:int = 0, subErrorID:int = 0, deviceGroup:DRMDeviceGroup = null, systemUpdateNeeded:Boolean = false, drmUpdateNeeded:Boolean = false)
DRMDeviceGroupEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, deviceGroup:DRMDeviceGroup = null)
DRMErrorEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, inErrorDetail:String = "", inErrorCode:int = 0, insubErrorID:int = 0, inMetadata:DRMContentData = null, inSystemUpdateNeeded:Boolean = false, inDrmUpdateNeeded:Boolean = false)
DRMManagerError(message:String, id:int, subErrorID:int)
DRMStatusEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, inMetadata:DRMContentData = null, inVoucher:DRMVoucher = null, inLocal:Boolean = false)
DamageEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, textFlow:flashx.textLayout.elements:TextFlow = null, damageAbsoluteStart:int = 0, damageLength:int = 0)
DataEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, data:String = "")
DatagramSocketDataEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, srcAddress:String = "", srcPort:int = 0, dstAddress:String = "", dstPort:int = 0, data:ByteArray = null)
Date(yearOrTimevalue:Object, month:Number, date:Number = 1, hour:Number = 0, minute:Number = 0, second:Number = 0, millisecond:Number = 0)
DateTimeFormatter(requestedLocaleIDName:String, dateStyle:String = "long", timeStyle:String = "long")
DefinitionError(message:String = "")
DeleteTextOperation(operationState:SelectionState, deleteSelectionState:SelectionState = null, allowMerge:Boolean = false)
Dictionary(weakKeys:Boolean = false)
DisplacementMapFilter(mapBitmap:BitmapData = null, mapPoint:Point = null, componentX:uint = 0, componentY:uint = 0, scaleX:Number = 0.0, scaleY:Number = 0.0, mode:String = "wrap", color:uint = 0, alpha:Number = 0.0)
DropShadowFilter(distance:Number = 4.0, angle:Number = 45, color:uint = 0, alpha:Number = 1.0, blurX:Number = 4.0, blurY:Number = 4.0, strength:Number = 1.0, quality:int = 1, inner:Boolean = false, knockout:Boolean = false, hideObject:Boolean = false)
EOFError(message:String = "")
EastAsianJustifier(locale:String = "ja", lineJustification:String = "allButLast", justificationStyle:String = "pushInKinsoku")
EditManager(undoManager:IUndoManager = null)
ElementFormat(fontDescription:FontDescription = null, fontSize:Number = 12.0, color:uint = 0x000000, alpha:Number = 1.0, textRotation:String = "auto", dominantBaseline:String = "roman", alignmentBaseline:String = "useDominantBaseline", baselineShift:Number = 0.0, kerning:String = "on", trackingRight:Number = 0.0, trackingLeft:Number = 0.0, locale:String = "en", breakOpportunity:String = "auto", digitCase:String = "default", digitWidth:String = "default", ligatureLevel:String = "common", typographicCase:String = "default")
Error(message:String = "", id:int = 0)
ErrorEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, text:String = "", id:int = 0)
EvalError(message:String = "")
Event(type:String, bubbles:Boolean = false, cancelable:Boolean = false)
EventDispatcher(target:IEventDispatcher = null)
File(path:String = null)
FileFilter(description:String, extension:String, macType:String = null)
FileListEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, files:Array = null)
FlowElementMouseEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = true, flowElement:FlowElement = null, originalEvent:MouseEvent = null)
FlowElementOperation(operationState:SelectionState, targetElement:FlowElement, relativeStart:int = 0, relativeEnd:int = -1)
FlowOperation(textFlow:flashx.textLayout.elements:TextFlow)
FlowOperationEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, operation:FlowOperation = null, level:int = 0, error:Error = null)
FlowTextOperation(operationState:SelectionState)
FocusEvent(type:String, bubbles:Boolean = true, cancelable:Boolean = false, relatedObject:InteractiveObject = null, shiftKey:Boolean = false, keyCode:uint = 0, direction:String = "none")
FontDescription(fontName:String = "_serif", fontWeight:String = "normal", fontPosture:String = "normal", fontLookup:String = "device", renderingMode:String = "cff", cffHinting:String = "horizontalStem")
FontMetrics(emBox:Rectangle, strikethroughOffset:Number, strikethroughThickness:Number, underlineOffset:Number, underlineThickness:Number, subscriptOffset:Number, subscriptScale:Number, superscriptOffset:Number, superscriptScale:Number, lineGap:Number = 0.0)
FormatDescriptor(format:String, importerClass:Class, exporterClass:Class, clipboardFormat:String)
FullScreenEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, fullScreen:Boolean = false)
GameInputEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, device:GameInputDevice = null)
GeolocationEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, latitude:Number = 0, longitude:Number = 0, altitude:Number = 0, hAccuracy:Number = 0, vAccuracy:Number = 0, speed:Number = 0, heading:Number = 0, timestamp:Number = 0)
GestureEvent(type:String, bubbles:Boolean = true, cancelable:Boolean = false, phase:String = null, localX:Number = 0, localY:Number = 0, ctrlKey:Boolean = false, altKey:Boolean = false, shiftKey:Boolean = false, commandKey:Boolean = false, controlKey:Boolean = false)
GlowFilter(color:uint = 0xFF0000, alpha:Number = 1.0, blurX:Number = 6.0, blurY:Number = 6.0, strength:Number = 2, quality:int = 1, inner:Boolean = false, knockout:Boolean = false)
GradientBevelFilter(distance:Number = 4.0, angle:Number = 45, colors:Array = null, alphas:Array = null, ratios:Array = null, blurX:Number = 4.0, blurY:Number = 4.0, strength:Number = 1, quality:int = 1, type:String = "inner", knockout:Boolean = false)
GradientGlowFilter(distance:Number = 4.0, angle:Number = 45, colors:Array = null, alphas:Array = null, ratios:Array = null, blurX:Number = 4.0, blurY:Number = 4.0, strength:Number = 1, quality:int = 1, type:String = "inner", knockout:Boolean = false)
GraphicElement(graphic:DisplayObject = null, elementWidth:Number = 15.0, elementHeight:Number = 15.0, elementFormat:ElementFormat = null, eventMirror:EventDispatcher = null, textRotation:String = "rotate0")
GraphicsBitmapFill(bitmapData:BitmapData = null, matrix:Matrix = null, repeat:Boolean = true, smooth:Boolean = false)
GraphicsGradientFill(type:String = "linear", colors:Array = null, alphas:Array = null, ratios:Array = null, matrix:* = null, spreadMethod:* = pad, interpolationMethod:String = "rgb", focalPointRatio:Number = 0.0)
GraphicsPath(commands:Vector. = null, data:Vector. = null, winding:String = "evenOdd")
GraphicsShaderFill(shader:Shader = null, matrix:Matrix = null)
GraphicsSolidFill(color:uint = 0, alpha:Number = 1.0)
GraphicsStroke(thickness:Number = NaN, pixelHinting:Boolean = false, scaleMode:String = "normal", caps:String = "none", joints:String = "round", miterLimit:Number = 3.0, fill:IGraphicsFill = null)
GraphicsTrianglePath(vertices:Vector. = null, indices:Vector. = null, uvtData:Vector. = null, culling:String = "none")
GroupElement(elements:Vector. = null, elementFormat:ElementFormat = null, eventMirror:EventDispatcher = null, textRotation:String = "rotate0")
GroupSpecifier(name:String)
HTMLHost(defaultBehaviors:Boolean = true)
HTMLUncaughtScriptExceptionEvent(exceptionValue:*)
HTTPStatusEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, status:int = 0)
IMEEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, text:String = "", imeClient:IIMEClient = null)
IOError(message:String = "")
IOErrorEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, text:String = "", id:int = 0)
IllegalOperationError(message:String = "")
InsertInlineGraphicOperation(operationState:SelectionState, source:Object, width:Object, height:Object, options:Object = null)
InsertTextOperation(operationState:SelectionState, text:String, deleteSelectionState:SelectionState = null)
InvalidSWFError(message:String = "", id:int = 0)
InvokeEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, dir:File = null, argv:Array = null, reason:String = "standard")
JPEGLoaderContext(deblockingFilter:Number = 0.0, checkPolicyFile:Boolean = false, applicationDomain:ApplicationDomain = null, securityDomain:SecurityDomain = null)
KeyboardEvent(type:String, bubbles:Boolean = true, cancelable:Boolean = false, charCodeValue:uint = 0, keyCodeValue:uint = 0, keyLocationValue:uint = 0, ctrlKeyValue:Boolean = false, altKeyValue:Boolean = false, shiftKeyValue:Boolean = false, controlKeyValue:Boolean = false, commandKeyValue:Boolean = false)
ListMarkerFormat(initialValues:IListMarkerFormat = null)
LoaderContext(checkPolicyFile:Boolean = false, applicationDomain:ApplicationDomain = null, securityDomain:SecurityDomain = null)
LocaleID(name:String)
LocationChangeEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, location:String = null)
Matrix(a:Number = 1, b:Number = 0, c:Number = 0, d:Number = 1, tx:Number = 0, ty:Number = 0)
Matrix3D(v:Vector. = null)
MediaEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, data:MediaPromise = null)
MemoryError(message:String = "")
ModifyInlineGraphicOperation(operationState:SelectionState, source:Object, width:Object, height:Object, options:Object = null)
MouseEvent(type:String, bubbles:Boolean = true, cancelable:Boolean = false, localX:Number = NaN, localY:Number = NaN, relatedObject:InteractiveObject = null, ctrlKey:Boolean = false, altKey:Boolean = false, shiftKey:Boolean = false, buttonDown:Boolean = false, delta:int = 0, commandKey:Boolean = false, controlKey:Boolean = false, clickCount:int = 0)
MoveChildrenOperation(operationState:SelectionState, source:FlowGroupElement, sourceIndex:int, numChildren:int, destination:FlowGroupElement, destinationIndex:int)
Namespace(prefixValue:*, uriValue:*)
Namespace(uriValue:*)
NativeDragEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = true, localX:Number = NaN, localY:Number = NaN, relatedObject:InteractiveObject = null, clipboard:Clipboard = null, allowedActions:NativeDragOptions = null, dropAction:String = null, controlKey:Boolean = false, altKey:Boolean = false, shiftKey:Boolean = false, commandKey:Boolean = false)
NativeMenuItem(label:String = "", isSeparator:Boolean = false)
NativeProcessExitEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, exitCode:Number = NaN)
NativeWindow(initOptions:NativeWindowInitOptions)
NativeWindowBoundsEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, beforeBounds:Rectangle = null, afterBounds:Rectangle = null)
NativeWindowDisplayStateEvent(type:String, bubbles:Boolean = true, cancelable:Boolean = false, beforeDisplayState:String = "", afterDisplayState:String = "")
NetDataEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, timestamp:Number = 0, info:Object = null)
NetGroup(connection:NetConnection, groupspec:String)
NetMonitorEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, netStream:NetStream = null)
NetStatusEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, info:Object = null)
NetStream(connection:NetConnection, peerID:String = "connectToFMS")
Number(num:Object)
NumberFormatter(requestedLocaleIDName:String)
NumberParseResult(value:Number = NaN, startIndex:int = 0x7fffffff, endIndex:int = 0x7fffffff)
OutputProgressEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, bytesPending:Number = 0, bytesTotal:Number = 0)
PasteOperation(operationState:SelectionState, textScrap:flashx.textLayout.edit:TextScrap)
Point(x:Number = 0, y:Number = 0)
PressAndTapGestureEvent(type:String, bubbles:Boolean = true, cancelable:Boolean = false, phase:String = null, localX:Number = 0, localY:Number = 0, tapLocalX:Number = 0, tapLocalY:Number = 0, ctrlKey:Boolean = false, altKey:Boolean = false, shiftKey:Boolean = false, commandKey:Boolean = false, controlKey:Boolean = false)
PrintJobOptions(printAsBitmap:Boolean = false)
ProgressEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, bytesLoaded:Number = 0, bytesTotal:Number = 0)
QName(qname:QName)
QName(uri:Namespace, localName:QName)
RangeError(message:String = "")
Rectangle(x:Number = 0, y:Number = 0, width:Number = 0, height:Number = 0)
RedoOperation(operation:FlowOperation)
ReferenceError(message:String = "")
RegExp(re:String, flags:String)
Responder(result:Function, status:Function = null)
SQLColumnSchema(name:String, primaryKey:Boolean, allowNull:Boolean, autoIncrement:Boolean, dataType:String, defaultCollationType:String)
SQLError(operation:String, details:String = "", message:String = "", id:int = 0, detailID:int = -1, detailArgs:Array = null)
SQLErrorEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, error:SQLError = null)
SQLEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false)
SQLIndexSchema(database:String, name:String, sql:String, table:String)
SQLResult(data:Array = null, rowsAffected:Number = 0, complete:Boolean = true, rowID:Number = 0)
SQLSchema(database:String, name:String, sql:String)
SQLSchemaResult(tables:Array, views:Array, indices:Array, triggers:Array)
SQLTableSchema(database:String, name:String, sql:String, columns:Array)
SQLTriggerSchema(database:String, name:String, sql:String, table:String)
SQLUpdateEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, table:String = null, rowID:Number = 0)
SQLViewSchema(database:String, name:String, sql:String, columns:Array)
SampleDataEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, theposition:Number = 0, thedata:ByteArray = null)
ScreenMouseEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, screenX:Number = NaN, screenY:Number = NaN, ctrlKey:Boolean = false, altKey:Boolean = false, shiftKey:Boolean = false, buttonDown:Boolean = false, commandKey:Boolean = false, controlKey:Boolean = false)
ScriptTimeoutError(message:String = "")
ScrollEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, direction:String = null, delta:Number = NaN)
SecurityError(message:String = "")
SecurityErrorEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, text:String = "", id:int = 0)
SelectionEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, selectionState:SelectionState = null)
SelectionFormat(rangeColor:uint = 0xffffff, rangeAlpha:Number = 1.0, rangeBlendMode:String = "difference", pointColor:uint = 0xffffff, pointAlpha:Number = 1.0, pointBlendMode:String = "difference", pointBlinkRate:Number = 500)
SelectionState(root:flashx.textLayout.elements:TextFlow, anchorPosition:int, activePosition:int, format:flashx.textLayout.formats:ITextLayoutFormat = null)
ServerSocketConnectEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, socket:Socket = null)
Shader(code:ByteArray = null)
ShaderData(byteCode:ByteArray)
ShaderEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, bitmap:BitmapData = null, array:ByteArray = null, vector:Vector. = null)
ShaderFilter(shader:Shader = null)
ShaderJob(shader:Shader = null, target:Object = null, width:int = 0, height:int = 0)
SimpleButton(upState:DisplayObject = null, overState:DisplayObject = null, downState:DisplayObject = null, hitTestState:DisplayObject = null)
Socket(host:String = null, port:int = 0)
SoftKeyboardEvent(type:String, bubbles:Boolean, cancelable:Boolean, relatedObjectVal:InteractiveObject, triggerTypeVal:String)
Sound(stream:URLRequest = null, context:SoundLoaderContext = null)
SoundLoaderContext(bufferTime:Number = 1000, checkPolicyFile:Boolean = false)
SoundTransform(vol:Number = 1, panning:Number = 0)
SpaceJustifier(locale:String = "en", lineJustification:String = "unjustified", letterSpacing:Boolean = false)
SplitElementOperation(operationState:SelectionState, targetElement:FlowGroupElement)
SplitParagraphOperation(operationState:SelectionState)
StackOverflowError(message:String = "")
StageOrientationEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, beforeOrientation:String = null, afterOrientation:String = null)
StageText(initOptions:flash.text:StageTextInitOptions = null)
StageTextInitOptions(multiline:Boolean = false)
StageVideoAvailabilityEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, availability:String = null)
StageVideoEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, status:String = null, colorSpace:String = null)
StatusChangeEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, element:FlowElement = null, status:String = null, errorEvent:ErrorEvent = null)
StatusEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, code:String = "", level:String = "")
StorageVolume(rootDirPath:File, name:String, writable:Boolean, removable:Boolean, fileSysType:String, drive:String)
StorageVolumeChangeEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, path:File = null, volume:StorageVolume = null)
String(val:String)
StringTextLineFactory(configuration:IConfiguration = null)
StringTools(requestedLocaleIDName:String)
SyncEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, changeList:Array = null)
SyntaxError(message:String = "")
TabStop(alignment:String = "start", position:Number = 0.0, decimalAlignmentToken:String = "")
TabStopFormat(initialValues:flashx.textLayout.formats:ITabStopFormat = null)
TextBlock(content:ContentElement = null, tabStops:Vector. = null, textJustifier:flash.text.engine:TextJustifier = null, lineRotation:String = "rotate0", baselineZero:String = "roman", bidiLevel:int = 0, applyNonLinearFontScaling:Boolean = true, baselineFontDescription:FontDescription = null, baselineFontSize:Number = 12.0)
TextContainerManager(container:Sprite, configuration:IConfiguration = null)
TextElement(text:String = null, elementFormat:ElementFormat = null, eventMirror:EventDispatcher = null, textRotation:String = "rotate0")
TextEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, text:String = "")
TextExtent(width:Number, height:Number, textFieldWidth:Number, textFieldHeight:Number, ascent:Number, descent:Number)
TextFlow(config:IConfiguration = null)
TextFlowLine(textLine:flash.text.engine:TextLine, paragraph:ParagraphElement, outerTargetWidth:Number = 0, lineOffset:Number = 0, absoluteStart:int = 0, numChars:int = 0)
TextFormat(font:String = null, size:Object = null, color:Object = null, bold:Object = null, italic:Object = null, underline:Object = null, url:String = null, target:String = null, align:String = null, leftMargin:Object = null, rightMargin:Object = null, indent:Object = null, leading:Object = null)
TextJustifier(locale:String, lineJustification:String)
TextLayoutEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false)
TextLayoutFormat(initialValues:flashx.textLayout.formats:ITextLayoutFormat = null)
TextLineMetrics(x:Number, width:Number, height:Number, ascent:Number, descent:Number, leading:Number)
TextRange(root:flashx.textLayout.elements:TextFlow, anchorIndex:int, activeIndex:int)
TextScrap(textFlow:flashx.textLayout.elements:TextFlow = null)
Timer(delay:Number, repeatCount:int = 0)
TimerEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false)
TouchEvent(type:String, bubbles:Boolean = true, cancelable:Boolean = false, touchPointID:int = 0, isPrimaryTouchPoint:Boolean = false, localX:Number = NaN, localY:Number = NaN, sizeX:Number = NaN, sizeY:Number = NaN, pressure:Number = NaN, relatedObject:InteractiveObject = null, ctrlKey:Boolean = false, altKey:Boolean = false, shiftKey:Boolean = false, commandKey:Boolean = false, controlKey:Boolean = false, timestamp:Number = NaN, touchIntent:String, samples:ByteArray = null, isTouchPointCanceled:Boolean = false)
TransformGestureEvent(type:String, bubbles:Boolean = true, cancelable:Boolean = false, phase:String = null, localX:Number = 0, localY:Number = 0, scaleX:Number = 1.0, scaleY:Number = 1.0, rotation:Number = 0, offsetX:Number = 0, offsetY:Number = 0, ctrlKey:Boolean = false, altKey:Boolean = false, shiftKey:Boolean = false, commandKey:Boolean = false, controlKey:Boolean = false)
TruncationOptions(truncationIndicator:String, lineCountLimit:int, truncationIndicatorFormat:flashx.textLayout.formats:ITextLayoutFormat = null)
TypeError(message:String = "")
URIError(message:String = "")
URLLoader(request:URLRequest = null)
URLRequest(url:String = null)
URLRequestHeader(name:String = "", value:String = "")
URLVariables(source:String = null)
UTC(year:Number, month:Number, date:Number = 1, hour:Number = 0, minute:Number = 0, second:Number = 0, millisecond:Number = 0)
UncaughtErrorEvent(type:String, bubbles:Boolean = true, cancelable:Boolean = true, error_in:* = null)
UndoOperation(op:FlowOperation)
UpdateCompleteEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, textFlow:flashx.textLayout.elements:TextFlow = null, controller:ContainerController = null)
Vector(length:uint = 0, fixed:Boolean = false)
Vector3D(x:Number = 0., y:Number = 0., z:Number = 0., w:Number = 0.)
VerifyError(message:String = "")
Video(width:int = 320, height:int = 240)
VideoEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, status:String = null)
VisibilityEvent(type:String, bubbles:Boolean = false, cancelable:Boolean = false, visibility:Boolean = false)
XML(value:Object)
XMLDocument(source:String = null)
XMLList(value:Object)
XMLNode(type:uint, value:String)
XMLSocket(host:String = null, port:int = 0)
abs(val:Number)
accDoDefaultAction(childID:uint)
accLocation(childID:uint)
accSelect(operation:uint, childID:uint)
acceptDragDrop(target:InteractiveObject)
acos(val:Number)
activate(window:NativeWindow = null)
activateHandler(event:Event)
add(a:Vector3D)
add(v:Point)
addBackgroundShape(shape:Shape)
addBinaryChainBuildingCertificate(certificate:ByteArray, trusted:Boolean)
addBitmapData(bitmapData:BitmapData)
addBootstrapPeer(peerID:String)
addCallback(functionName:String, closure:Function)
addCertificate(cert:ByteArray, trusted:Boolean)
addChild(child:DisplayObject)
addChild(child:FlowElement)
addChildAt(child:DisplayObject, index:int)
addChildAt(index:uint, child:FlowElement)
addController(controller:ContainerController)
addControllerAt(controller:ContainerController, index:int)
addEventListener(type:String, listener:Function, useCapture:Boolean = false, priority:int = 0, useWeakReference:Boolean = false)
addEventListener(type:String, listener:Function, useCapture:Boolean = false, priority:int = 0.0, useWeakReference:Boolean = false)
addFormat(format:String, importerClass:Class, exporterClass:Class, clipboardFormat:String)
addFormatAt(index:int, format:String, importerClass:Class, exporterClass:Class = null, clipboardFormat:String = null)
addHaveObjects(startIndex:Number, endIndex:Number)
addHeader(operation:String, mustUnderstand:Boolean = false, param:Object = null)
addIPMulticastAddress(address:String, port:* = null, source:String = null)
addInlineGraphicElement(parent:DisplayObjectContainer, inlineGraphicElement:DisplayObject, index:int)
addItem(item:NativeMenuItem)
addItemAt(item:NativeMenuItem, index:int)
addLineForReuse(textLine:flash.text.engine:TextLine)
addMemberHint(peerID:String)
addNamespace(ns:Object)
addNeighbor(peerID:String)
addOperation(operation:FlowOperation)
addPage(sprite:Sprite, printArea:Rectangle = null, options:PrintJobOptions = null, frameNum:int = 0)
addSelectionContainer(selectionContainer:DisplayObjectContainer)
addSubmenu(submenu:NativeMenu, label:String)
addSubmenuAt(submenu:NativeMenu, index:int, label:String)
addTextLine(textLine:flash.text.engine:TextLine, index:int)
addToDeviceGroup(deviceGroup:DRMDeviceGroup, forceRefresh:Boolean = false)
addWantObjects(startIndex:Number, endIndex:Number)
allowDomain(... domains)
allowInsecureDomain(... domains)
analyze(resourceName:String = null, responder:Responder = null)
angleBetween(a:Vector3D, b:Vector3D)
append(lhs:Matrix3D)
appendBytes(bytes:ByteArray)
appendBytesAction(netStreamAppendBytesAction:String)
appendChild(child:Object)
appendChild(node:XMLNode)
appendRotation(degrees:Number, axis:Vector3D, pivotPoint:Vector3D = null)
appendScale(xScale:Number, yScale:Number, zScale:Number)
appendText(newText:String)
appendTranslation(x:Number, y:Number, z:Number)
apply(incoming:flashx.textLayout.formats:ITabStopFormat)
apply(incoming:flashx.textLayout.formats:ITextLayoutFormat)
apply(thisArg:*, argArray:*)
applyContainerFormat(containerFormat:flashx.textLayout.formats:ITextLayoutFormat, operationState:SelectionState = null)
applyContainerFormat(format:flashx.textLayout.formats:ITextLayoutFormat, operationState:SelectionState = null)
applyFilter(sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, filter:BitmapFilter)
applyFormat(leafFormat:flashx.textLayout.formats:ITextLayoutFormat, paragraphFormat:flashx.textLayout.formats:ITextLayoutFormat, containerFormat:flashx.textLayout.formats:ITextLayoutFormat, operationState:SelectionState = null)
applyFormatToElement(targetElement:FlowElement, format:flashx.textLayout.formats:ITextLayoutFormat, relativeStart:int = 0, relativeEnd:int = -1, operationState:SelectionState = null)
applyLeafFormat(characterFormat:flashx.textLayout.formats:ITextLayoutFormat, operationState:SelectionState = null)
applyLeafFormat(format:flashx.textLayout.formats:ITextLayoutFormat, operationState:SelectionState = null)
applyLink(href:String, target:String = null, extendToLinkBoundary:Boolean = false, operationState:SelectionState = null)
applyLink(href:String, targetString:String = null, extendToLinkBoundary:Boolean = false, operationState:SelectionState = null)
applyParagraphFormat(format:flashx.textLayout.formats:ITextLayoutFormat, operationState:SelectionState = null)
applyParagraphFormat(paragraphFormat:flashx.textLayout.formats:ITextLayoutFormat, operationState:SelectionState = null)
applyTCY(tcyOn:Boolean, operationState:SelectionState = null)
areInaccessibleObjectsUnderPoint(point:Point)
asin(val:Number)
assignFocus(direction:String = "none")
assignFocus(objectToFocus:InteractiveObject, direction:String)
atan(val:Number)
atan2(y:Number, x:Number)
attach(connection:NetConnection)
attach(name:String, reference:Object = null, responder:Responder = null, encryptionKey:ByteArray = null)
attachAudio(microphone:Microphone)
attachCamera(camera:Camera)
attachCamera(theCamera:Camera, snapshotMilliseconds:int = -1)
attachNetStream(netStream:NetStream)
attribute(attributeName:*)
authenticate(serverURL:String, domain:String, username:String, password:String)
autoScrollIfNecessary(mouseX:int, mouseY:int)
begin(option:String = null, responder:Responder = null)
beginBitmapFill(bitmap:BitmapData, matrix:Matrix = null, repeat:Boolean = true, smooth:Boolean = false)
beginFill(color:uint, alpha:Number = 1.0)
beginGradientFill(type:String, colors:Array, alphas:Array, ratios:Array, matrix:Matrix = null, spreadMethod:String = "pad", interpolationMethod:String = "rgb", focalPointRatio:Number = 0)
beginShaderFill(shader:Shader, matrix:Matrix = null)
bind(localPort:int = 0, localAddress:String = "0.0.0.0")
bounce(priority:String = "informational")
browse(typeFilter:Array = null)
browseForDirectory(title:String)
browseForImage(value:CameraRollBrowseOptions = null)
browseForOpen(title:String, typeFilter:Array = null)
browseForOpenMultiple(title:String, typeFilter:Array = null)
browseForSave(title:String)
call(command:String, responder:Responder, ... arguments)
call(functionName:String, ... args)
call(functionName:String, ... arguments)
call(thisArg:*, ... args)
callInContext(fn:Function, thisArg:Object, argArray:Array, returns:Boolean = true)
callProperty(name:*, ... rest)
cancel(responder:Responder = null)
ceil(val:Number)
changeElementID(newID:String, targetElement:FlowElement, relativeStart:int = 0, relativeEnd:int = -1, operationState:SelectionState = null)
changeStyleName(newName:String, targetElement:FlowElement, relativeStart:int = 0, relativeEnd:int = -1, operationState:SelectionState = null)
changeTypeName(newName:String, targetElement:FlowElement, relativeStart:int = 0, relativeEnd:int = -1, operationState:SelectionState = null)
charAt(index:Number = 0)
charCodeAt(index:Number = 0)
child(propertyName:Object)
clear(red:Number = 0.0, green:Number = 0.0, blue:Number = 0.0, alpha:Number = 1.0, depth:Number = 1.0, stencil:uint = 0, mask:uint = 0xffffffff)
clearData(format:String)
clearFormat(leafFormat:flashx.textLayout.formats:ITextLayoutFormat, paragraphFormat:flashx.textLayout.formats:ITextLayoutFormat, containerFormat:flashx.textLayout.formats:ITextLayoutFormat, operationState:SelectionState = null)
clearFormatOnElement(targetElement:FlowElement, format:flashx.textLayout.formats:ITextLayoutFormat, operationState:SelectionState = null)
clearStyle(styleProp:String)
cloneNode(deep:Boolean)
close(responder:Responder = null)
colorTransform(rect:Rectangle, colorTransform:flash.geom:ColorTransform)
commit(responder:Responder = null)
compact(responder:Responder = null)
compare(otherBitmapData:BitmapData)
compare(string1:String, string2:String)
composeToController(index:int)
composeToPosition(absolutePosition:int)
compositionSelectionChanged(start:int, end:int)
compress(algorithm:String)
computeSpectrum(outputArray:ByteArray, FFTMode:Boolean = false, stretchFactor:int = 0)
concat(... args)
concat(incoming:flashx.textLayout.formats:ITabStopFormat)
concat(incoming:flashx.textLayout.formats:ITextLayoutFormat)
concat(m:Matrix)
concat(second:flash.geom:ColorTransform)
concatInheritOnly(incoming:flashx.textLayout.formats:ITabStopFormat)
concatInheritOnly(incoming:flashx.textLayout.formats:ITextLayoutFormat)
configureBackBuffer(width:int, height:int, antiAlias:int, enableDepthAndStencil:Boolean = true)
confirmComposition(text:String = null, preserveSelection:Boolean = false)
connect(command:String, ... arguments)
connect(connectionName:String)
connect(host:String, port:int)
connect(myConnection:NetConnection, params:String = null)
connect(remoteAddress:String, remotePort:int)
contains(child:DisplayObject)
contains(value:XML)
contains(x:Number, y:Number)
containsItem(item:NativeMenuItem)
containsPoint(point:Point)
containsRect(rect:Rectangle)
convertPeerIDToGroupAddress(peerID:String)
copy(incoming:flashx.textLayout.formats:ITextLayoutFormat)
copy(values:flashx.textLayout.formats:ITabStopFormat)
copyChannel(sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, sourceChannel:uint, destChannel:uint)
copyColumnFrom(column:uint, vector3D:Vector3D)
copyColumnTo(column:uint, vector3D:Vector3D)
copyFrom(sourceGraphics:Graphics)
copyFrom(sourceMatrix3D:Matrix3D)
copyFrom(sourceMatrix:Matrix)
copyFrom(sourcePoint:Point)
copyFrom(sourceRect:Rectangle)
copyFrom(sourceVector3D:Vector3D)
copyPixels(sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, alphaBitmapData:BitmapData = null, alphaPoint:Point = null, mergeAlpha:Boolean = false)
copyRawDataFrom(vector:Vector., index:uint = 0, transpose:Boolean = false)
copyRawDataTo(vector:Vector., index:uint = 0, transpose:Boolean = false)
copyRowFrom(row:uint, vector3D:Vector3D)
copyRowTo(row:uint, vector3D:Vector3D)
copyTo(newLocation:FileReference, overwrite:Boolean = false)
copyToAsync(newLocation:FileReference, overwrite:Boolean = false)
copyToMatrix3D(dest:Matrix3D)
cos(angleRadians:Number)
createBox(scaleX:Number, scaleY:Number, rotation:Number = 0, tx:Number = 0, ty:Number = 0)
createCubeTexture(size:int, format:String, optimizeForRenderToTexture:Boolean)
createDiv(parent:FlowGroupElement = null, format:flashx.textLayout.formats:ITextLayoutFormat = null, operationState:SelectionState = null)
createEditManager(undoManager:IUndoManager)
createElement(name:String)
createElementRange(textFlow:flashx.textLayout.elements:TextFlow, absoluteStart:int, absoluteEnd:int)
createExtensionContext(extensionID:String, contextType:String)
createGradientBox(width:Number, height:Number, rotation:Number = 0, tx:Number = 0, ty:Number = 0)
createIndexBuffer(numIndices:int)
createList(parent:FlowGroupElement = null, format:flashx.textLayout.formats:ITextLayoutFormat = null, operationState:SelectionState = null)
createListMarkerFormat(initialValues:Object)
createRootWindow(visible:Boolean = true, windowInitOptions:NativeWindowInitOptions = null, scrollBarsVisible:Boolean = true, bounds:Rectangle = null)
createSubParagraphGroup(parent:FlowGroupElement = null, format:flashx.textLayout.formats:ITextLayoutFormat = null, operationState:SelectionState = null)
createTextLayoutFormat(initialValues:Object)
createTextLine(previousLine:flash.text.engine:TextLine = null, width:Number = 1000000, lineOffset:Number = 0.0, fitSomething:Boolean = false)
createTextLines(callback:Function)
createTextLines(callback:Function, textFlow:flashx.textLayout.elements:TextFlow)
createTextNode(text:String)
createTextScrap(range:flashx.textLayout.elements:TextRange)
createTexture(width:int, height:int, format:String, optimizeForRenderToTexture:Boolean)
createVertexBuffer(numVertices:int, data32PerVertex:int)
createWindow(windowCreateOptions:flash.html:HTMLWindowCreateOptions)
crossProduct(a:Vector3D)
cubicCurveTo(controlX1:Number, controlY1:Number, controlX2:Number, controlY2:Number, anchorX:Number, anchorY:Number)
curveTo(controlX:Number, controlY:Number, anchorX:Number, anchorY:Number)
cutTextScrap(operationState:SelectionState = null)
damage(startPosition:int, damageLength:int, damageType:String)
deactivateHandler(event:Event)
deanalyze(responder:Responder = null)
decode(source:String)
decompose(orientationStyle:String = "eulerAngles")
decrementBy(a:Vector3D)
deepCopy(relativeStart:int = 0, relativeEnd:int = -1)
deleteDirectory(deleteDirectoryContents:Boolean = false)
deleteDirectoryAsync(deleteDirectoryContents:Boolean = false)
deleteNextCharacter(operationState:SelectionState = null)
deleteNextWord(operationState:SelectionState = null)
deletePreviousCharacter(operationState:SelectionState = null)
deletePreviousWord(operationState:SelectionState = null)
deleteProperty(name:*)
deleteText(operationState:SelectionState = null)
deltaTransformPoint(point:Point)
deltaTransformVector(v:Vector3D)
denyRequestedObject(requestID:int)
dereference(uri:String)
descendants(name:Object = *)
detach(name:String, responder:Responder = null)
determinePreferredLocales(want:Vector., have:Vector., keyword:String = "userinterface")
dispatchEvent(event:Event)
dispatchEvent(evt:Event)
display(stage:Stage, stageX:Number, stageY:Number)
disposeXML(node:XML)
distance(pt1:Point, pt2:Point)
distance(pt1:Vector3D, pt2:Vector3D)
doDrag(dragInitiator:InteractiveObject, clipboard:Clipboard, dragImage:BitmapData = null, offset:Point = null, allowedActions:NativeDragOptions = null)
doOperation(op:FlowOperation)
doOperation(operation:FlowOperation)
dotProduct(a:Vector3D)
download(request:URLRequest, defaultFileName:String = null)
draw(source:IBitmapDrawable, matrix:Matrix = null, colorTransform:flash.geom:ColorTransform = null, blendMode:String = null, clipRect:Rectangle = null, smoothing:Boolean = false)
drawBackgroundAndSetScrollRect(scrollX:Number, scrollY:Number)
drawCircle(x:Number, y:Number, radius:Number)
drawEllipse(x:Number, y:Number, width:Number, height:Number)
drawGraphicsData(graphicsData:Vector.)
drawPath(commands:Vector., data:Vector., winding:String = "evenOdd")
drawRect(x:Number, y:Number, width:Number, height:Number)
drawRoundRect(x:Number, y:Number, width:Number, height:Number, ellipseWidth:Number, ellipseHeight:Number = NaN)
drawToBitmapData(destination:BitmapData)
drawTriangles(indexBuffer:IndexBuffer3D, firstIndex:int = 0, numTriangles:int = -1)
drawTriangles(vertices:Vector., indices:Vector. = null, uvtData:Vector. = null, culling:String = "none")
drawViewPortToBitmapData(bitmap:BitmapData)
editHandler(event:Event)
elements(name:Object = *)
encodeBootstrapPeerIDSpec(peerID:String)
encodeIPMulticastAddressSpec(address:String, port:* = null, source:String = null)
encodePostingAuthorization(password:String)
encodePublishAuthorization(password:String)
endOfDocument(range:flashx.textLayout.elements:TextRange, extendSelection:Boolean = false)
endOfLine(range:flashx.textLayout.elements:TextRange, extendSelection:Boolean = false)
endOfParagraph(range:flashx.textLayout.elements:TextRange, extendSelection:Boolean = false)
enumerateFonts(enumerateDeviceFonts:Boolean = false)
equalUserStyles(otherElement:FlowElement)
equals(selectionFormat:SelectionFormat)
equals(string1:String, string2:String)
equals(toCompare:Point)
equals(toCompare:Rectangle)
equals(toCompare:Vector3D, allFour:Boolean = false)
every(callback:Function, thisObject:* = null)
every(callback:Function, thisObject:Object = null)
exec(str:String)
execute(prefetch:int = -1, responder:Responder = null)
exit(code:uint)
exit(errorCode:int = 0)
exit(force:Boolean = false)
exp(val:Number)
export(source:flashx.textLayout.elements:TextFlow, conversionType:String)
export(source:flashx.textLayout.elements:TextFlow, format:String, conversionType:String)
extract(target:ByteArray, length:Number, startPosition:Number = -1)
fillRect(rect:Rectangle, color:uint)
filter(callback:Function, thisObject:* = null)
filter(callback:Function, thisObject:Object = null)
findChildIndexAtPosition(relativePosition:int)
findControllerIndexAtPosition(absolutePosition:int, preferPrevious:Boolean = false)
findLeaf(relativePosition:int)
findLineAtPosition(absolutePosition:int, preferPrevious:Boolean = false)
findLineIndexAtPosition(absolutePosition:int, preferPrevious:Boolean = false)
findNextAtomBoundary(afterCharIndex:int)
findNextAtomBoundary(relativePosition:int)
findNextWordBoundary(afterCharIndex:int)
findNextWordBoundary(relativePosition:int)
findPreviousAtomBoundary(beforeCharIndex:int)
findPreviousAtomBoundary(relativePosition:int)
findPreviousWordBoundary(beforeCharIndex:int)
findPreviousWordBoundary(relativePosition:int)
findText(beginIndex:int, textToFind:String, caseSensitive:Boolean)
floodFill(x:int, y:int, color:uint)
floor(val:Number)
flush(minDiskSpace:int = 0)
focusChangeHandler(event:FocusEvent)
focusInHandler(event:FocusEvent)
focusOutHandler(event:FocusEvent)
forEach(callback:Function, thisObject:* = null)
forEach(callback:Function, thisObject:Object = null)
format(dateTime:Date)
format(value:Number, withCurrencySymbol:Boolean = false)
formatInt(value:int)
formatNumber(value:Number)
formatToString(className:String, ... arguments)
formatUTC(dateTime:Date)
formatUint(value:uint)
formattingWithCurrencySymbolIsSafe(requestedISOCode:String)
fromCharCode(... charCodes)
generateFilterRect(sourceRect:Rectangle, filter:BitmapFilter)
getAbsoluteStart(controller:ContainerController)
getAtomBidiLevel(atomIndex:int)
getAtomBounds(atomIndex:int)
getAtomCenter(atomIndex:int)
getAtomGraphic(atomIndex:int)
getAtomIndexAtCharIndex(charIndex:int)
getAtomIndexAtPoint(stageX:Number, stageY:Number)
getAtomTextBlockBeginIndex(atomIndex:int)
getAtomTextBlockEndIndex(atomIndex:int)
getAtomTextRotation(atomIndex:int)
getAtomWordBoundaryOnLeft(atomIndex:int)
getBaselinePosition(baseline:String)
getBounds(targetCoordinateSpace:DisplayObject)
getCachedSamples(data:ByteArray, append:Boolean = false)
getCamera(name:String = null)
getCharAtPosition(relativePosition:int)
getCharBoundaries(charIndex:int)
getCharCodeAtPosition(relativePosition:int)
getCharIndexAtPoint(x:Number, y:Number)
getChildAt(index:int)
getChildByName(name:String)
getChildIndex(child:DisplayObject)
getChildIndex(child:FlowElement)
getColorBoundsRect(mask:uint, color:uint, findColor:Boolean = true)
getColumnAt(index:int)
getCommonCharacterFormat(range:flashx.textLayout.elements:TextRange = null)
getCommonContainerFormat(range:flashx.textLayout.elements:TextRange = null)
getCommonParagraphFormat(range:flashx.textLayout.elements:TextRange = null)
getControlAt(i:int)
getControllerAt(index:int)
getControllerIndex(controller:ContainerController)
getData(format:String, transferMode:String = "originalPreferred")
getDefaultApplication(extension:String)
getDefinition(name:String)
getDescendants(name:*)
getDeviceAt(index:int)
getElementAt(index:int)
getElementAtCharIndex(charIndex:int)
getElementByID(idName:String)
getElementIndex(element:ContentElement)
getElementRelativeStart(ancestorElement:FlowElement)
getElementsByStyleName(styleNameValue:String)
getElementsByTypeName(typeNameValue:String)
getEnhancedMicrophone(index:int = -1)
getExporter(format:String)
getExtensionDirectory(extensionID:String)
getFirstCharInParagraph(charIndex:int)
getFormatAt(index:int)
getFormatDescriptorAt(index:int)
getHistoryAt(position:uint)
getImageReference(id:String)
getImporter(format:String, config:IConfiguration = null)
getItem(name:String)
getItemAt(index:int)
getItemByName(name:String)
getItemIndex(item:NativeMenuItem)
getJustifierForLocale(locale:String)
getLineAt(index:int)
getLineIndexAtPoint(x:Number, y:Number)
getLineIndexOfChar(charIndex:int)
getLineLength(lineIndex:int)
getLineMetrics(lineIndex:int)
getLineOffset(lineIndex:int)
getLineText(lineIndex:int)
getLoaderInfoByDefinition(object:Object)
getLocal(name:String, localPath:String = null, secure:Boolean = false)
getMicrophone(index:int = -1)
getMirrorRegion(mirror:EventDispatcher)
getMonthNames(nameStyle:String = "full", context:String = "standalone")
getNamespaceForPrefix(prefix:String)
getNextLeaf(limitElement:FlowGroupElement = null)
getObjectsUnderPoint(point:Point)
getParagraphLength(charIndex:int)
getPixel(x:int, y:int)
getPixel32(x:int, y:int)
getPixels(rect:Rectangle)
getPrefixForNamespace(ns:String)
getPreviousLeaf(limitElement:FlowGroupElement = null)
getProperty(name:*)
getRect(targetCoordinateSpace:DisplayObject)
getRelativeMatrix3D(relativeTo:DisplayObject)
getRelativePath(ref:FileReference, useDotDot:Boolean = false)
getRemote(name:String, remotePath:String = null, persistence:Object = false, secure:Boolean = false)
getResolverForNewFlow(oldFlow:flashx.textLayout.elements:TextFlow, newFlow:flashx.textLayout.elements:TextFlow)
getSamples(buffer:ByteArray, append:Boolean = false)
getScreensForRectangle(rect:Rectangle)
getScrollDelta(numLines:int)
getSelected(beginIndex:int, endIndex:int)
getSelectedText(includeLineEndings:Boolean = false)
getStyle(styleName:String)
getStyle(styleProp:String)
getText(beginIndex:int, endIndex:int, includeLineEndings:Boolean = false)
getText(relativeStart:int = 0, relativeEnd:int = -1, paragraphSeparator:String = " ")
getText(separator:String = " ")
getTextBounds(startIndex:int, endIndex:int)
getTextFormat(beginIndex:int = -1, endIndex:int = -1)
getTextInRange(startIndex:int, endIndex:int)
getTextLine(forceValid:Boolean = false)
getTextLineAtCharIndex(charIndex:int)
getTextRunInfo(beginIndex:int, endIndex:int)
getValueAt(index:int = 0)
getVector(rect:Rectangle)
getWeekdayNames(nameStyle:String = "full", context:String = "standalone")
get_accDefaultAction(childID:uint)
get_accName(childID:uint)
get_accRole(childID:uint)
get_accState(childID:uint)
get_accValue(childID:uint)
globalToLocal(point:Point)
globalToLocal3D(point:Point)
globalToScreen(globalPoint:Point)
gotoAndPlay(frame:Object, scene:String = null)
gotoAndStop(frame:Object, scene:String = null)
groupElements(beginIndex:int, endIndex:int)
hasDefinition(name:String)
hasEventListener(type:String)
hasFormat(format:String)
hasGlyphs(str:String)
hasMultiChannelAudio(type:String)
hasOwnProperty(name:String)
hasOwnProperty(p:String)
hasProperty(name:*)
histogram(hRect:Rectangle = null)
historyGo(steps:int)
hitTest(firstPoint:Point, firstAlphaThreshold:uint, secondObject:Object, secondBitmapDataPoint:Point = null, secondAlphaThreshold:uint = 1)
hitTestObject(obj:DisplayObject)
hitTestPoint(x:Number, y:Number, shapeFlag:Boolean = false)
hitTestTextNearPos(x:Number, y:Number, maxDistance:Number = 0)
imeStartCompositionHandler(event:IMEEvent)
importToFlow(source:Object)
importToFlow(source:Object, format:String, config:IConfiguration = null)
incrementBy(a:Vector3D)
indexOf(searchElement:*, fromIndex:int = 0)
indexOf(searchElement:T, fromIndex:int = 0)
indexOf(val:String, startIndex:Number = 0)
inflate(dx:Number, dy:Number)
inflatePoint(point:Point)
initialized(document:Object, id:String)
insertBefore(node:XMLNode, before:XMLNode)
insertChildAfter(child1:Object, child2:Object)
insertChildBefore(child1:Object, child2:Object)
insertInlineGraphic(source:Object, width:Object, height:Object, options:Object = null, operationState:SelectionState = null)
insertText(text:String, operationState:SelectionState = null)
insertText(text:String, origOperationState:SelectionState = null)
interactionManagerChanged(newInteractionManager:ISelectionManager)
interpolate(pt1:Point, pt2:Point, f:Number)
interpolate(thisMat:Matrix3D, toMat:Matrix3D, percent:Number)
interpolateTo(toMat:Matrix3D, percent:Number)
intersection(toIntersect:Rectangle)
intersects(toIntersect:Rectangle)
invalidate(target:Object)
invalidateAll(textFlow:flashx.textLayout.elements:TextFlow)
isAttribute(name:*)
isDamaged(absolutePosition:int)
isDeviceFontCompatible(fontName:String, fontWeight:String, fontPosture:String)
isEqual(p1:flashx.textLayout.formats:ITabStopFormat, p2:flashx.textLayout.formats:ITabStopFormat)
isEqual(p1:flashx.textLayout.formats:ITextLayoutFormat, p2:flashx.textLayout.formats:ITextLayoutFormat)
isFontCompatible(fontName:String, fontStyle:String)
isFontCompatible(fontName:String, fontWeight:String, fontPosture:String)
isHighSurrogate(charCode:int)
isLabeledBy(labelBounds:Rectangle)
isLowSurrogate(charCode:int)
isPrototypeOf(theClass:Object)
isSetAsDefaultApplication(extension:String)
isToolButtonDown(index:int)
isWhitespace(charCode:int)
join(sep:*)
join(sep:String = ",")
keyDownHandler(event:KeyboardEvent)
keyFocusChangeHandler(event:FocusEvent)
keyUpHandler(event:KeyboardEvent)
lastIndexOf(searchElement:*, fromIndex:int = 0x7fffffff)
lastIndexOf(searchElement:T, fromIndex:int = 0x7fffffff)
lastIndexOf(val:String, startIndex:Number = 0x7FFFFFFF)
launch(requestedMediaType:String)
lineBitmapStyle(bitmap:BitmapData, matrix:Matrix = null, repeat:Boolean = true, smooth:Boolean = false)
lineGradientStyle(type:String, colors:Array, alphas:Array, ratios:Array, matrix:Matrix = null, spreadMethod:String = "pad", interpolationMethod:String = "rgb", focalPointRatio:Number = 0)
lineShaderStyle(shader:Shader, matrix:Matrix = null)
lineStyle(thickness:Number = NaN, color:uint = 0, alpha:Number = 1.0, pixelHinting:Boolean = false, scaleMode:String = "normal", caps:String = null, joints:String = null, miterLimit:Number = 3)
lineTo(x:Number, y:Number)
listen(backlog:int = 0)
load(request:URLRequest)
load(request:URLRequest, context:LoaderContext = null)
load(stream:URLRequest, context:SoundLoaderContext = null)
load(urlRequestToLoad:URLRequest)
loadBytes(bytes:ByteArray, context:LoaderContext = null)
loadCompressedDataFromByteArray(bytes:ByteArray, bytesLength:uint)
loadFilePromise(promise:IFilePromise, context:LoaderContext = null)
loadPCMFromByteArray(bytes:ByteArray, samples:uint, format:String = "float", stereo:Boolean = true, sampleRate:Number = 44100.0)
loadPolicyFile(url:String)
loadPreviewVoucher(contentData:DRMContentData)
loadSchema(type:Class = null, name:String = null, database:String = "main", includeColumnSchema:Boolean = true, responder:Responder = null)
loadString(htmlContent:String)
loadString(text:String, mimeType:String = "text/html")
loadURL(url:String)
loadVoucher(contentData:DRMContentData, setting:String)
local3DToGlobal(point3d:Vector3D)
localToGlobal(point:Point)
localeCompare(other:String, ... values)
log(val:Number)
lookup(host:String, recordType:Class)
map(callback:Function, thisObject:* = null)
map(callback:Function, thisObject:Object = null)
match(pattern:*)
max(val1:Number, val2:Number, ... rest)
menuSelectHandler(event:ContextMenuEvent)
merge(sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, redMultiplier:uint, greenMultiplier:uint, blueMultiplier:uint, alphaMultiplier:uint)
mergeTextElements(beginIndex:int, endIndex:int)
min(val1:Number, val2:Number, ... rest)
modifyInlineGraphic(source:Object, width:Object, height:Object, options:Object = null, operationState:SelectionState = null)
mouseDoubleClickHandler(event:MouseEvent)
mouseDownHandler(event:MouseEvent)
mouseMoveHandler(event:MouseEvent)
mouseMoveSomewhere(e:Event)
mouseMoveSomewhere(event:Event)
mouseOutHandler(event:MouseEvent)
mouseOverHandler(event:MouseEvent)
mouseUpHandler(event:MouseEvent)
mouseUpSomewhere(e:Event)
mouseUpSomewhere(event:Event)
mouseWheelHandler(event:MouseEvent)
moveChildren(source:FlowGroupElement, sourceIndex:int, numChildren:int, destination:FlowGroupElement, destinationIndex:int, operationState:SelectionState = null)
moveChildren(source:FlowGroupElement, sourceIndex:int, numChildren:int, destination:FlowGroupElement, destinationIndex:int, selectionState:SelectionState = null)
moveTo(newLocation:FileReference, overwrite:Boolean = false)
moveTo(x:Number, y:Number)
moveToAsync(newLocation:FileReference, overwrite:Boolean = false)
namespace(prefix:String = null)
nearEquals(toCompare:Vector3D, tolerance:Number, allFour:Boolean = false)
next(prefetch:int = -1, responder:Responder = null)
nextAtomPosition(flowRoot:flashx.textLayout.elements:TextFlow, absolutePos:int)
nextCharacter(range:flashx.textLayout.elements:TextRange, extendSelection:Boolean = false)
nextLine(range:flashx.textLayout.elements:TextRange, extendSelection:Boolean = false)
nextName(index:int)
nextNameIndex(index:int)
nextPage(range:flashx.textLayout.elements:TextRange, extendSelection:Boolean = false)
nextValue(index:int)
nextWord(range:flashx.textLayout.elements:TextRange, extendSelection:Boolean = false)
nextWordPosition(flowRoot:flashx.textLayout.elements:TextFlow, absolutePos:int)
noise(randomSeed:int, low:uint = 0, high:uint = 255, channelOptions:uint = 7, grayScale:Boolean = false)
normalize(thickness:Number)
notifyInsertOrDelete(absolutePosition:int, length:int)
notifyUser(type:String)
offset(dx:Number, dy:Number)
offsetPoint(point:Point)
onPeerConnect(subscriber:NetStream)
open(file:File, fileMode:String)
open(reference:Object = null, openMode:String = "create", autoCompact:Boolean = false, pageSize:int = 1024, encryptionKey:ByteArray = null)
openAsync(file:File, fileMode:String)
openAsync(reference:Object = null, openMode:String = "create", responder:Responder = null, autoCompact:Boolean = false, pageSize:int = 1024, encryptionKey:ByteArray = null)
orderInBackOf(window:NativeWindow)
orderInFrontOf(window:NativeWindow)
overwriteText(text:String, operationState:SelectionState = null)
paletteMap(sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, redArray:Array = null, greenArray:Array = null, blueArray:Array = null, alphaArray:Array = null)
parse(date:String)
parse(inputString:String)
parse(parseString:String)
parse(text:String, reviver:Function = null)
parseCSS(CSSText:String)
parseNumber(parseString:String)
parseXML(source:String)
pasteTextScrap(scrapToPaste:flashx.textLayout.edit:TextScrap, operationState:SelectionState = null)
pauseForGCIfCollectionImminent(imminence:Number = 0.75)
perlinNoise(baseX:Number, baseY:Number, numOctaves:uint, randomSeed:int, stitch:Boolean, fractalNoise:Boolean, channelOptions:uint = 7, grayScale:Boolean = false, offsets:Array = null)
pixelDissolve(sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, randomSeed:int = 0, numPixels:int = 0, fillColor:uint = 0)
play(... arguments)
play(startTime:Number = 0, loops:int = 0, sndTransform:flash.media:SoundTransform = null)
play2(param:NetStreamPlayOptions)
pointAt(pos:Vector3D, at:Vector3D = null, up:Vector3D = null)
pointTowards(percent:Number, mat:Matrix3D, pos:Vector3D, at:Vector3D = null, up:Vector3D = null)
polar(len:Number, angle:Number)
post(message:Object)
pow(base:Number, pow:Number)
preloadEmbeddedData(param:NetStreamPlayOptions)
prepend(rhs:Matrix3D)
prependChild(value:Object)
prependRotation(degrees:Number, axis:Vector3D, pivotPoint:Vector3D = null)
prependScale(xScale:Number, yScale:Number, zScale:Number)
prependTranslation(x:Number, y:Number, z:Number)
previousAtomPosition(flowRoot:flashx.textLayout.elements:TextFlow, absolutePos:int)
previousCharacter(range:flashx.textLayout.elements:TextRange, extendSelection:Boolean = false)
previousLine(range:flashx.textLayout.elements:TextRange, extendSelection:Boolean = false)
previousPage(range:flashx.textLayout.elements:TextRange, extendSelection:Boolean = false)
previousWord(range:flashx.textLayout.elements:TextRange, extendSelection:Boolean = false)
previousWordPosition(flowRoot:flashx.textLayout.elements:TextFlow, absolutePos:int)
processingInstructions(name:String = "*")
projectVector(m:Matrix3D, v:Vector3D)
projectVectors(m:Matrix3D, verts:Vector., projectedVerts:Vector., uvts:Vector.)
propertyIsEnumerable(name:String)
propertyIsEnumerable(p:String)
publish(name:String = null, type:String = null)
push(... args)
pushRedo(operation:IOperation)
pushUndo(operation:IOperation)
readBytes(bytes:ByteArray, offset:uint = 0, length:uint = 0)
readExternal(input:IDataInput)
readMultiByte(length:uint, charSet:String)
readUTFBytes(length:uint)
receiveAudio(flag:Boolean)
receiveVideo(flag:Boolean)
receiveVideoFPS(FPS:Number)
recompose(components:Vector., orientationStyle:String = "eulerAngles")
recreateTextLine(textLine:flash.text.engine:TextLine, previousLine:flash.text.engine:TextLine = null, width:Number = 1000000, lineOffset:Number = 0.0, fitSomething:Boolean = false)
reencrypt(newEncryptionKey:ByteArray, responder:Responder = null)
registerCursor(name:String, cursor:MouseCursorData)
registerFont(font:Class)
releaseLines(firstLine:flash.text.engine:TextLine, lastLine:flash.text.engine:TextLine)
releaseSavepoint(name:String = null, responder:Responder = null)
removeAsDefaultApplication(extension:String)
removeBackgroundShape(shape:Shape)
removeChild(child:DisplayObject)
removeChild(child:FlowElement)
removeChildAt(index:int)
removeChildAt(index:uint)
removeChildren(beginIndex:int = 0, endIndex:int = 0x7fffffff)
removeClashing(incoming:flashx.textLayout.formats:ITabStopFormat)
removeClashing(incoming:flashx.textLayout.formats:ITextLayoutFormat)
removeController(controller:ContainerController)
removeControllerAt(index:int)
removeEventListener(type:String, listener:Function, useCapture:Boolean = false)
removeFormat(format:String)
removeFormatAt(index:int)
removeFromDeviceGroup(deviceGroup:DRMDeviceGroup)
removeHaveObjects(startIndex:Number, endIndex:Number)
removeInlineGraphicElement(parent:DisplayObjectContainer, inlineGraphicElement:DisplayObject)
removeItem(item:NativeMenuItem)
removeItem(name:String)
removeItemAt(index:int)
removeMatching(incoming:flashx.textLayout.formats:ITabStopFormat)
removeMatching(incoming:flashx.textLayout.formats:ITextLayoutFormat)
removeNamespace(ns:Namespace)
removeSelectionContainer(selectionContainer:DisplayObjectContainer)
removeTextLine(textLine:flash.text.engine:TextLine)
removeWantObjects(startIndex:Number, endIndex:Number)
replace(pattern:*, repl:Object)
replace(propertyName:Object, value:XML)
replaceChildren(beginChildIndex:int, endChildIndex:int, ... rest)
replaceElements(beginIndex:int, endIndex:int, newElements:Vector.)
replaceSelectedText(value:String)
replaceText(beginIndex:int, endIndex:int, newText:String)
replaceText(relativeStartPosition:int, relativeEndPosition:int, textValue:String)
reportError(e:ErrorEvent)
requestContext3D(context3DRenderMode:String = "auto")
resetLine(textLine:flash.text.engine:TextLine)
resolveFormat(target:Object)
resolvePath(path:String)
resolveUserFormat(target:Object, userFormat:String)
rollback(responder:Responder = null)
rollbackToSavepoint(name:String = null, responder:Responder = null)
rotate(angle:Number)
round(val:Number)
save(data:*, defaultFileName:String = null)
scale(sx:Number, sy:Number)
scaleBy(s:Number)
scroll(x:int, y:int)
scrollToRange(activePosition:int, anchorPosition:int)
search(pattern:*)
seek(offset:Number)
selectPaperSize(paperSize:String)
selectRange(anchorIndex:int, activeIndex:int)
selectRange(anchorPosition:int, activePosition:int)
send(... arguments)
send(bytes:ByteArray, offset:uint = 0, length:uint = 0, address:String = null, port:int = 0)
send(connectionName:String, methodName:String, ... arguments)
send(handlerName:String, ... arguments)
send(object:*)
sendToAllNeighbors(message:Object)
sendToNearest(message:Object, groupAddress:String)
sendToNeighbor(message:Object, sendMode:String)
setAdvancedAntiAliasingTable(fontName:String, fontStyle:String, colorType:String, advancedAntiAliasingTable:Array)
setAsDefaultApplication(extension:String)
setAspectRatio(newAspectRatio:String)
setAuthenticationToken(serverUrl:String, domain:String, token:ByteArray)
setBlendFactors(sourceFactor:String, destinationFactor:String)
setChildIndex(child:DisplayObject, index:int)
setChildren(value:Object)
setClipboard(string:String)
setColorMask(red:Boolean, green:Boolean, blue:Boolean, alpha:Boolean)
setCompositionSize(w:Number, h:Number)
setCompositionString(composition:String)
setContents(textScrap:flashx.textLayout.edit:TextScrap)
setCulling(triangleFaceToCull:String)
setCurrency(currencyISOCode:String, currencySymbol:String)
setDRMAuthenticationCredentials(userName:String, password:String, type:String)
setData(format:String, data:Object, serializable:Boolean = true)
setDataHandler(format:String, handler:Function, serializable:Boolean = true)
setDate(day:Number)
setDateTimePattern(pattern:String)
setDateTimeStyles(dateStyle:String, timeStyle:String)
setDepthTest(depthMask:Boolean, passCompareMode:String)
setDirty(propertyName:String)
setElements(value:Vector.)
setFocus(absolutePosition:int, leanLeft:Boolean = false)
setFocus(absolutePosition:int, preferPrevious:Boolean = false)
setFullYear(year:Number, month:Number, day:Number)
setHours(hour:Number, minute:Number, second:Number, millisecond:Number)
setItem(name:String, data:ByteArray, stronglyBound:Boolean = false)
setItemIndex(item:NativeMenuItem, index:int)
setKeyFrameInterval(keyFrameInterval:int)
setLocalName(name:String)
setLoginCredentialsForHost(hostname:String, user:String, password:String)
setLoopBack(state:Boolean = true)
setLoopback(compress:Boolean = false)
setMilliseconds(millisecond:Number)
setMinutes(minute:Number, second:Number, millisecond:Number)
setMode(width:int, height:int, fps:Number, favorArea:Boolean = true)
setMonth(month:Number, day:Number)
setMotionLevel(motionLevel:int, timeout:int = 2000)
setMouseCursor(cursor:String)
setName(name:String)
setNamespace(ns:Namespace)
setOrientation(newOrientation:String)
setPixel(x:int, y:int, color:uint)
setPixel32(x:int, y:int, color:uint)
setPixels(rect:Rectangle, inputByteArray:ByteArray)
setPostingPassword(password:String = null, salt:String = null)
setProfileLevel(profile:String, level:String)
setProgram(program:Program3D)
setProgramConstantsFromByteArray(programType:String, firstRegister:int, numRegisters:int, data:ByteArray, byteArrayOffset:uint)
setProgramConstantsFromMatrix(programType:String, firstRegister:int, matrix:Matrix3D, transposedMatrix:Boolean = false)
setProgramConstantsFromVector(programType:String, firstRegister:int, data:Vector., numRegisters:int = -1)
setProperty(name:*, value:*)
setProperty(propertyName:String, value:Object = null)
setPropertyIsEnumerable(name:String, isEnum:Boolean = true)
setPublishPassword(password:String = null, salt:String = null)
setQuality(bandwidth:int, quality:int)
setRenderToTexture(texture:flash.display3D.textures:TextureBase, enableDepthAndStencil:Boolean = false, antiAlias:int = 0, surfaceSelector:int = 0)
setRequestedUpdateInterval(interval:Number)
setRootElement(newRootElement:ContainerFormattedElement)
setSavepoint(name:String = null, responder:Responder = null)
setScissorRectangle(rectangle:Rectangle)
setSeconds(second:Number, millisecond:Number)
setSelectColor(hexColor:uint = 0xFFFF00)
setSelected(beginIndex:int, endIndex:int, select:Boolean)
setSelection(beginIndex:int, endIndex:int)
setSelectionState(sel:SelectionState)
setSelectionState(state:SelectionState)
setSettings(... rest)
setSilenceLevel(silenceLevel:Number, timeout:int = -1)
setStencilActions(triangleFace:String = "frontAndBack", compareMode:String = "always", actionOnBothPass:String = "keep", actionOnDepthFail:String = "keep", actionOnDepthPassStencilFail:String = "keep")
setStencilReferenceValue(referenceValue:uint, readMask:uint = 255, writeMask:uint = 255)
setStyle(styleName:String, styleObject:Object)
setStyle(styleName:String, value:*)
setStyle(styleProp:String, newValue:*)
setText(text:String)
setTextFlow(textFlow:flashx.textLayout.elements:TextFlow)
setTextFormat(format:flash.text:TextFormat, beginIndex:int = -1, endIndex:int = -1)
setTextureAt(sampler:int, texture:flash.display3D.textures:TextureBase)
setTime(millisecond:Number)
setTo(aa:Number, ba:Number, ca:Number, da:Number, txa:Number, tya:Number)
setTo(xa:Number, ya:Number)
setTo(xa:Number, ya:Number, widtha:Number, heighta:Number)
setTo(xa:Number, ya:Number, za:Number)
setUTCDate(day:Number)
setUTCFullYear(year:Number, month:Number, day:Number)
setUTCHours(hour:Number, minute:Number, second:Number, millisecond:Number)
setUTCMilliseconds(millisecond:Number)
setUTCMinutes(minute:Number, second:Number, millisecond:Number)
setUTCMonth(month:Number, day:Number)
setUTCSeconds(second:Number, millisecond:Number)
setUseEchoSuppression(useEchoSuppression:Boolean)
setVector(rect:Rectangle, inputVector:Vector.)
setVertexBufferAt(index:int, buffer:VertexBuffer3D, bufferOffset:int = 0, format:String = "float4")
shallowCopy(relativeStart:int = 0, relativeEnd:int = -1)
showSettings(panel:String = "default")
sin(angleRadians:Number)
slice(startIndex:Number = 0, endIndex:Number = 0x7fffffff)
slice(startIndex:int = 0, endIndex:int = 16777215)
softKeyboardActivatingHandler(event:Event)
some(callback:Function, thisObject:* = null)
some(callback:Function, thisObject:Object = null)
sort(... args)
sort(compareFunction:Function)
sortOn(fieldName:Object, options:Object = null)
splice(startIndex:int, deleteCount:uint = 4294967295, ... items)
splice(startIndex:int, deleteCount:uint, ... values)
split(delimiter:*, limit:Number = 0x7fffffff)
splitAtIndex(childIndex:int)
splitAtPosition(relativePosition:int)
splitElement(target:FlowGroupElement, operationState:SelectionState = null)
splitParagraph(operationState:SelectionState = null)
splitTextElement(elementIndex:int, splitIndex:int)
sqrt(val:Number)
start(info:NativeProcessStartupInfo)
start(waitForCompletion:Boolean = false)
start2(uiOptions:PrintUIOptions = null, showPrintDialog:Boolean = true)
startCachingSamples(numSamples:int, controls:Vector.)
startDrag(lockCenter:Boolean = false, bounds:Rectangle = null)
startOfDocument(range:flashx.textLayout.elements:TextRange, extendSelection:Boolean = false)
startOfLine(range:flashx.textLayout.elements:TextRange, extendSelection:Boolean = false)
startOfParagraph(range:flashx.textLayout.elements:TextRange, extendSelection:Boolean = false)
startResize(edgeOrCorner:String = "BR")
startTouchDrag(touchPointID:int, lockCenter:Boolean = false, bounds:Rectangle = null)
step(frames:int)
stopTouchDrag(touchPointID:int)
storeVoucher(voucher:ByteArray)
stringify(value:Object, replacer:* = null, space:* = null)
substr(startIndex:Number = 0, len:Number = 0x7fffffff)
substring(startIndex:Number = 0, endIndex:Number = 0x7fffffff)
subtract(a:Vector3D)
subtract(v:Point)
swapChildren(child1:DisplayObject, child2:DisplayObject)
swapChildrenAt(index1:int, index2:int)
tan(angleRadians:Number)
test(str:String)
textInputHandler(event:flash.events:TextEvent)
threshold(sourceBitmapData:BitmapData, sourceRect:Rectangle, destPoint:Point, operation:String, threshold:uint, color:uint = 0, mask:uint = 0xFFFFFFFF, copySource:Boolean = false)
toExponential(fractionDigits:uint)
toFixed(fractionDigits:uint)
toJSON(k:String)
toLowerCase(s:String)
toPrecision(precision:uint)
toString(radix:Number = 10)
toUpperCase(s:String)
transform(formatObject:Object)
transformPoint(point:Point)
transformVector(v:Vector3D)
transformVectors(vin:Vector., vout:Vector.)
translate(dx:Number, dy:Number)
uncompress(algorithm:String)
ungroupElements(groupIndex:int)
union(toUnion:Rectangle)
unloadAndStop(gc:Boolean = true)
unlock(changeRect:Rectangle = null)
unregisterCursor(name:String)
unshift(... args)
update(airFile:File, version:String)
update(type:String)
updateComposition(text:String, attributes:Vector., compositionStartIndex:int, compositionEndIndex:int)
updateLengths(startPosition:int, deltaLength:int)
updateLocation(locationURL:String)
updateRange(newAnchorPosition:int, newActivePosition:int)
updateStatus(status:String)
updateTitle(title:String)
updateToController(index:int)
upload(request:URLRequest, uploadDataFieldName:String = "Filedata", testUpload:Boolean = false)
upload(vertexProgram:ByteArray, fragmentProgram:ByteArray)
uploadCompressedTextureFromByteArray(data:ByteArray, byteArrayOffset:uint, async:Boolean = false)
uploadFromBitmapData(source:BitmapData, miplevel:uint = 0)
uploadFromBitmapData(source:BitmapData, side:uint, miplevel:uint = 0)
uploadFromByteArray(data:ByteArray, byteArrayOffset:int, startOffset:int, count:int)
uploadFromByteArray(data:ByteArray, byteArrayOffset:int, startVertex:int, numVertices:int)
uploadFromByteArray(data:ByteArray, byteArrayOffset:uint, miplevel:uint = 0)
uploadFromByteArray(data:ByteArray, byteArrayOffset:uint, side:uint, miplevel:uint = 0)
uploadFromVector(data:Vector., startOffset:int, count:int)
uploadFromVector(data:Vector., startVertex:int, numVertices:int)
uploadUnencoded(request:URLRequest)
verify(signature:XML)
wideLineTo(x:Number, y:Number)
wideMoveTo(x:Number, y:Number)
willTrigger(type:String)
writeBoolean(value:Boolean)
writeByte(value:int)
writeBytes(bytes:ByteArray, offset:uint = 0, length:uint = 0)
writeDouble(value:Number)
writeDynamicProperties(obj:Object, output:IDynamicPropertyOutput)
writeDynamicProperty(name:String, value:*)
writeExternal(output:IDataOutput)
writeFloat(value:Number)
writeInt(value:int)
writeMultiByte(value:String, charSet:String)
writeObject(object:*)
writeRequestedObject(requestID:int, object:Object)
writeShort(value:int)
writeUTF(value:String)
writeUTFBytes(value:String)
writeUnsignedInt(value:uint)
